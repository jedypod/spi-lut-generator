#!/usr/bin/env python
from __future__ import with_statement
from __future__ import print_function
from __future__ import division

import os, sys, argparse

from aces_ocio.generate_lut import *


def generate(resolution=65):
    # Generate an spi3d lut image from an input processed ramp image

    parser = argparse.ArgumentParser(
        description="Transform processed image into a spi1d lut file."
        )

    parser.add_argument("input_image",
                        type=str,
                        help="transformed image to process into a spi1d lut",
                        action="store")

    parser.add_argument("-o", "--output",
                        type=str,
                        help="output folder",
                        required=False)

    parser.add_argument("--resolution",
                        type=int,
                        help="resolution of ramp",
                        required=False)

    args = parser.parse_args()
    input_image = args.input_image
    if not os.path.exists(input_image):
        print("Error: input image does not exist. Please point to a valid transformed tiff image.")
        return
    if args.output:
        output = args.output
        output = os.path.expanduser(output)
        output = os.path.realpath(output)
        if not os.path.isdir(output):
            os.makedirs(output)
    else:
        output = os.getcwd()

    if args.resolution:
        resolution = args.resolution

    generate_3d_LUT_from_image(
        input_image,
        output_path=os.path.splitext(input_image)[0]+".spi3d",
        resolution=resolution
        )

if __name__=="__main__":
    generate()
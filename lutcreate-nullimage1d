#!/usr/bin/env python
from __future__ import with_statement
from __future__ import print_function
from __future__ import division

import os, sys, argparse

from aces_ocio.generate_lut import *


def create(resolution=4096, min_value=-0.358400, max_value=1.468000):
    # Create a 4096x1 linear ramp from min_value to max_value.

    # Get commandline arguments
    parser = argparse.ArgumentParser(
        description="Create 1 dimensional ramp for color processing, to create an spi1d lut file."
        )

    parser.add_argument("-o", "--output",
                        type=str,
                        help="output folder",
                        required=False)

    parser.add_argument("--resolution",
                        type=int,
                        help="resolution of ramp",
                        required=False)

    parser.add_argument("--min",
                        type=float,
                        help="min value in ramp",
                        required=False)

    parser.add_argument("--max",
                        type=float,
                        help="max value in ramp",
                        required=False)

    args = parser.parse_args()

    if args.output:
        output = args.output
        output = os.path.expanduser(output)
        output = os.path.realpath(output)
        if not os.path.isdir(output):
            os.makedirs(output)
    else:
        output = os.getcwd()
    if args.min is not None:
        # print("Setting args.min to {0}".format(args.min))
        min_value = args.min
    if args.max is not None:
        # print("Setting args.max to {0}".format(args.max))
        max_value = args.max
    if args.resolution is not None:
        # print("Setting args.resolution to {0}".format(args.resolution))
        resolution = args.resolution

    image_name = "null_1d.{0}.{1}to{2}.float.tiff".format(resolution, min_value, max_value)
    output_image = os.path.join(output, image_name)
    print(output_image)

    generate_1d_LUT_image(
        output_image,
        resolution=resolution,
        min_value=min_value,
        max_value=max_value
        )


if __name__=="__main__":
    create()